        <div class="expose-edit-wrapper">
            <div class="expose-edit-wrapper" style="margin-top: 100px">
                <br/>
                <br/>
                <br/>
                <br/>
                <form id="publication-data-form" >
                    <div class="edit-publication-block">
                        <div class="ui-widget">
                            <label>Name </label>
                            <input type="text" value="{{ publication.title }}" name="title" class="publication-field"/>
                        </div>
                        <div class="ui-widget">
                            <label>Slug: </label>
                            <input type="text" value="{{ publication.slug }}" name="slug" class=" slug publication-field"/><input type="button"
                                                                                                            class="blue_button"
                                                                                                            value="check slug availability">
                        </div>
                        <div class="ui-widget">
                            <label>Parent publication </label>
                            <div id="publication-list-data" class="ui-widget publication_parent_wrapper ">
                                {% if publication.parent.id %}
                                    {% set parentId =  publication.parent.id %}
                                {% endif %}
                                <select id="publication_parent" name="parentId" tabindex="-1" aria-hidden="true"
                                        class="publication-field">
                                    <option value="">Select a parent publication</option>
                                    {% if publication.parent %}
                                        <option value="{{ publication.parent.id }}" selected="selected">{{ publication.parent.title }}</option>
                                    {% endif %}
                                </select>
                            </div>
                        </div>
                        <div class="ui-widget profile-wrapper hide">
                            <label>Profile </label>
                            {% set nbProfile =  publication.profile|length %}

                            <select id="profile-field" name="profile" tabindex="-1" aria-hidden="true"
                                    class="publication-field">
                                <option value="">Select Profile</option>
                                {% if nbProfile %}
                                    <option value="{{ publication.profile.id }}">{{ publication.profile.name }}</option>
                                {% endif %}
                            </select>
                        </div>
                        <div class="ui-widget">
                            <label>Enabled </label>
                            <label class="switch">
                                <input id="enabled_combobox" type="checkbox" class="publication-field" name="enabled"
                                       {% if publication.enabled == 1 %} checked {% endif %}
                                >
                                <span class="slider round"></span>
                            </label>
                        </div>
                        <div class="ui-widget available-wrapper">
                            <label>Available (leave blank for permanent publication): </label>
                            <div class="available-widget">
                                <label>From </label>
                                <input type="text" value="{{ publication.config.beginsAt }}" name="beginsAt" class="use-datepicker publication-field"/>
                            </div>
                            <div class="available-widget">
                                <label>To </label>
                                <input type="text" value="{{ publication.config.expiresAt }}" name="expiresAt" class="use-datepicker publication-field"/>
                            </div>
                        </div>
                        <div class="ui-widget">
                            <label>Publicity listing </label>
                            <label class="switch">
                                <input id="publication_publiclyListed" type="checkbox" class="publication-field" name="publiclyListed"
                                {% if publication.publiclyListed == 1 %} checked {% endif %}
                                >
                                <span class="slider round"></span>
                            </label>
                        </div>
                        <div class="ui-widget access-wrapper available-wrapper">
                            <label>Access rules </label>
                            <div class="available-widget">
                                <select id="publication_securityMethod" name="securityMethod" tabindex="-1" aria-hidden="true"
                                        class="publication-field">
                                    <option value="">open access</option>
                                    <option value="password" {% if publication.securityMethod == 'password'%} selected="selected" {% endif %}>password</option>
                                    <option value="authentication" {% if publication.securityMethod == 'authentication'%} selected="selected" {% endif %}>users</option>
                                </select>
                            </div>
                            <div class="available-widget ui-widget securityOptions_wrapper visibility-hidden">
                                <input class="publication-field" type="text" name="password" placeholder="Password"
                                       id="publication_password"/>
                            </div>
                            <div class="available-widget ui-widget publication_securityMethod_error hidden"
                                 id="publication_securityMethod_error">
                                <p class="error form-error alert alert-error">Not implemented</p>
                            </div>
                        </div>
                        <div class="ui-widget">
                            <label>Layout </label>
                            <select id="publication_layout" name="layout" tabindex="-1" aria-hidden="true"
                                    class="publication-field">
                                <option value="">Select Layout</option>
                                <option value="gallery" {% if publication.layout == 'gallery'%} selected="selected" {% endif %}>Gallery</option>
                                <option value="mapbox" {% if publication.layout == 'mapbox'%} selected="selected" {% endif %}>Mapbox</option>
                                <option value="download" {% if publication.layout == 'download'%} selected="selected" {% endif %}>Download</option>
                            </select>
                        </div>
                        <div class="ui-widget">
                            <label>Theme </label>
                            <select id="theme-field" name="theme" tabindex="-1" aria-hidden="true"
                                    class="publication-field">
                                <option value="">Select Theme</option>
                                <option value="light" {% if publication.theme == 'light'%} selected="selected" {% endif %}>Light</option>
                                <option value="dark" {% if publication.theme == 'dark'%} selected="selected" {% endif %}>Dark</option>
                            </select>
                        </div>
                    </div>
                </form>

                <h3>Permission</h3>

                <div style="border: 1px solid #ada9a9;padding: 5px;">
                    <form id="permission-user">
                        <div class="ui-widget">
                            <label>User </label>
                            <div class="ui-widget">
                                <select id="user-list" name="" tabindex="-1" aria-hidden="true"
                                        class="">
                                    <option value="">Select an user</option>
                                </select>
                            </div>
                        </div>

                        <div class="ui-widget">
                            <label style="width:10%;!important">View : </label>
                            <label style="width:10%;!important">
                                <input type="checkbox" name="user-view">
                            </label>
                            <label style="width:10%;!important">Edit : </label>
                            <label style="width:10%;!important">
                                <input type="checkbox" name="user-edit">
                            </label>
                            <label style="width:10%;!important">Delete : </label>
                            <label style="width:10%;!important">
                                <input type="checkbox" name="user-delete">
                            </label>
                            <button id="save-permission-user" type="submit">Save</button>

                        </div>

                        <p id="user-permission-success" class="hidden alert alert-success text-center"></p>
                        <p id="user-permission-error" class="hidden alert alert-error text-center"></p>
                    </form>

                    <form id="permission-group">
                        <div class="ui-widget" style="margin-top:50px;">
                            <label>Groups </label>
                            <div id="" class="ui-widget">
                                <select id="group-list" name="" tabindex="-1" aria-hidden="true"
                                        class="">
                                    <option value="">Select a Group</option>
                                </select>
                            </div>
                        </div>

                        <div class="ui-widget">
                            <label style="width:10%;!important">View : </label>
                            <label style="width:10%;!important">
                                <input type="checkbox" name="group-view">
                            </label>
                            <label style="width:10%;!important">Edit : </label>
                            <label style="width:10%;!important">
                                <input type="checkbox" name="group-edit">
                            </label>
                            <label style="width:10%;!important">Delete : </label>
                            <label style="width:10%;!important">
                                <input type="checkbox" name="group-delete">
                            </label>
                            <button id="save-permission-group" type="submit">Save</button>
                        </div>
                        <p id="group-permission-success" class="hidden alert alert-success text-center"></p>
                        <p id="group-permission-error" class="hidden alert alert-error text-center"></p>
                    </form>
                </div>

                <form name="publication-json" id="publication-json" class="text-center">
                    <div id="advancedSettingBlock">
                        <h3 class="toggleSetting">Advanced setting</h3>
                        <div id="advancedSettingInner" class="hidden">
                            <div>
                                    <textarea name="advancedSetting" id="advancedSetting" cols="100"
                                              rows="11"></textarea></div>

                        </div>
                    </div>
                    <div class="publication-btn-container submit-blockr">
                        <p class="text-center"><span id="pub-error" class="hidden alert alert-error"></span></p>
                        <p class="text-center"><span id="pub-success" class="hidden alert alert-success"></span></p>
                        <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
                            <div class="ui-dialog-buttonset">
                                <button type="button"
                                        class="close-expose-modal ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"
                                        role="button" aria-disabled="false"><span class="ui-button-text">Cancel</span>
                                </button>
                                <button type="submit" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" id="update-publication">
                                    Update publication
                                </button>

                            </div>
                        </div>
                    </div>

                </form>


            </div>


        </div>

    <script type="text/javascript">

        var publicationEdit = $(document).find("#DIALOG-expose-edit");

        var publicationForm = publicationEdit.find("#publication-data-form");
        var publicationParent = publicationEdit.find("#publication_parent");
        var profileField = publicationEdit.find("#profile-field");
        var userList = publicationEdit.find("#user-list");
        var groupList = publicationEdit.find("#group-list");
        var advancedSetting = publicationEdit.find("#advancedSetting");

        var userView = publicationEdit.find('input[name=user-view]');
        var userEdit = publicationEdit.find('input[name=user-edit]');
        var userDelete = publicationEdit.find('input[name=user-delete]');

        var groupView = publicationEdit.find('input[name=group-view]');
        var groupEdit = publicationEdit.find('input[name=group-edit]');
        var groupDelete = publicationEdit.find('input[name=group-delete]');

        var publicationFieldClass = publicationEdit.find(".publication-field");

        $.datepicker.regional['default'] = {
            closeText: "Close",
            prevText: "{{ 'workzone:datepicker:prevText' | trans }}",
            nextText: "{{ 'workzone:datepicker:nextText' | trans }}",
            currentText: "Today",
            monthNames: ["{{ 'workzone:datepicker:january' | trans }}", "{{ 'workzone:datepicker:february' | trans }}", "{{ 'workzone:datepicker:march' | trans }}", "{{ 'workzone:datepicker:april' | trans }}", "{{ 'workzone:datepicker:may' | trans }}", "{{ 'workzone:datepicker:june' | trans }}",
                "{{ 'workzone:datepicker:july' | trans }}", "{{ 'workzone:datepicker:august' | trans }}", "{{ 'workzone:datepicker:september' | trans }}", "{{ 'workzone:datepicker:october' | trans }}", "{{ 'workzone:datepicker:november' | trans }}", "{{ 'workzone:datepicker:december' | trans }}"],
            dayNames: ["{{ 'workzone:datepicker:sunday' | trans }}", "{{ 'workzone:datepicker:monday' | trans }}", "{{ 'workzone:datepicker:tuesday' | trans }}", "{{ 'workzone:datepicker:wednesday' | trans }}", "{{ 'workzone:datepicker:thursday' | trans }}", "{{ 'workzone:datepicker:friday' | trans }}", "{{ 'workzone:datepicker:saturday' | trans }}"],
            dayNamesMin: ["D", "L", "M", "M", "J", "V", "S"],
            dateFormat: "d MM yy",
            altField: ".alternate",
            altFormat: "yy-mm-dd",
            minDate: 0

        };

        $(".use-datepicker").datepicker($.datepicker.regional['default']);

        //generate publication list
        $(document).ready(function () {
            publicationEdit.find('.toggleSetting').on('click', function (e) {
                $(this).toggleClass('open');
                $(this).next("div").toggleClass('hidden');
            });

            $.ajax({
                type: "GET",
                url: `/prod/expose/list-publication/?format=json&exposeName={{ exposeName }}`,
                success: function (data) {
                    publicationParent.empty().html('<option value="">Select a parent publication</option>');
                    for (i = 0; i < data.publications.length; i++) {
                        let selected = '';
                        if (data.publications[i].id == '{{ parentId }}') {
                            selected = 'selected="selected"';
                        }

                        if (data.publications[i].id !== '{{ publication.id }}') {
                            publicationParent.append('<option value='+data.publications[i].id+' ' + selected +'>'+data.publications[i].title+'</option>');
                        }
                    }
                }
            });

            $.ajax({
                type: "GET",
                url: `/prod/expose/list-profile?exposeName={{ exposeName }}`,
                success: function (data) {
                    profileField.empty().html('<option value="">Select Profile</option>');
                    for (let i = 0; i < data.profiles.length; i++) {
                        let selected = '';
                        if ({{ nbProfile }} && data.profiles[i].id === '{{ publication.profile.id }}') {
                            selected = 'selected="selected"';
                        }

                        $('#DIALOG-expose-edit select#profile-field').append('<option ' +
                            'value=' + data.basePath + '/' + data.profiles[i].id + ' ' + selected + ' >'
                            + data.profiles[i].name +
                            '</option>'
                        );
                    }

                }
            });

            $.ajax({
                type: "GET",
                url: `/prod/expose/list/users?exposeName={{ exposeName }}`,
                success: function (data) {
                    userList.empty().html('<option value="">Select an User</option>');
                    for (i = 0; i < data.list.length; i++) {
                        userList.append('<option ' +
                            'value=' + data.list[i].id +' >'
                            + data.list[i].username +
                            '</option>'
                        );
                    }
                }
            });

            $.ajax({
                type: "GET",
                url: `/prod/expose/list/users?groups=1&exposeName={{ exposeName }}`,
                success: function (data) {
                    groupList.empty().html('<option value="">Select a Group</option>');
                    for (i = 0; i < data.list.length; i++) {
                        groupList.append('<option ' +
                            'value=' + data.list[i].id +' >'
                            + data.list[i].name +
                            '</option>'
                        );
                    }
                }
            });

        });

        /**convert Object data  to Json**/
        function booleanizeObject(obj) {
            var keys = Object.keys(obj);
            keys.forEach(function (key) {
                var value = obj[key];
                if (typeof value === 'string') {
                    var lvalue = value.toLowerCase();
                    if (lvalue === 'true') {
                        obj[key] = true;
                    } else if (lvalue === 'false') {
                        obj[key] = false;
                    }
                } else if (typeof value === 'object') {
                    booleanizeObject(obj[key]);
                }
            });
        }

        function buildData() {
            try {
                var allData = publicationForm.serializeArray();
                var dataValue = allData.reduce((acc, it) => {
                    acc[it.name] = it.value;
                    return acc;
                }, {});

                /**Build Config elt**/
                var config = {};

                if (dataValue.layout != '') {
                    config = {...config, layout: dataValue.layout};
                }
                if (dataValue.enabled == 'on') {
                    config = {...config, enabled: true};
                }else{
                    config = {...config, enabled: false};
                }
                if (dataValue.publiclyListed == 'on') {
                    config = {...config, publiclyListed: true};
                }else{
                    config = {...config, publiclyListed: false};
                }
                if (dataValue.securityMethod != '') {
                    config = {...config, securityMethod: dataValue.securityMethod};
                }
                if (dataValue.password) {
                    config = {...config, password: dataValue.password};
                }

                if (dataValue.beginsAt) {
                    config = {...config, beginsAt: dataValue.beginsAt};
                }
                if (dataValue.expiresAt) {
                    config = {...config, expiresAt: dataValue.expiresAt};
                }

                if (dataValue.theme) {
                    config = {...config, theme: dataValue.theme};
                }

                dataValue = {...dataValue, config};


                booleanizeObject(dataValue);


                return dataValue;

            } catch (err) {
                return;
            }
        }

        function removeSecurityField() {
            var datavalueMinus = buildData();

            if (publicationParent.val() == "") {
                delete datavalueMinus['parentId'];
            }

            if (profileField.val() == "") {
                delete datavalueMinus['profile'];
            }

            delete datavalueMinus['layout'];
            delete datavalueMinus['enabled'];
            delete datavalueMinus['publiclyListed'];
            delete datavalueMinus['password'];
            delete datavalueMinus['securityMethod'];
            delete datavalueMinus['theme'];
            delete datavalueMinus['beginsAt'];
            delete datavalueMinus['expiresAt'];

            advancedSetting.val(JSON.stringify(datavalueMinus, undefined, 4));
            console.log(JSON.stringify(datavalueMinus, undefined, 4));

        }

        publicationFieldClass.on('keyup change', function (e) {
            try {
                publicationEdit.find("#pub-success").addClass("hidden");
                publicationEdit.find("#pub-error").addClass("hidden");
                jQuery.parseJSON(JSON.stringify($(this).val()));
            } catch (err) {
                publicationEdit.find("#pub-error").removeClass("hidden").text(err.message);
            }

            removeSecurityField();
        });

        publicationEdit.find('#publication-json').on('submit', function (e) {
            e.preventDefault();

            try {
                publicationEdit.find("#pub-error").addClass("hidden");

            } catch (err) {
                publicationEdit.find("#pub-error").removeClass("hidden").text(err.message);
                return;
            }
            if (advancedSetting.val() !== '') {
                $.ajax({
                    type: "PUT",
                    url: "/prod/expose/update-publication/{{ publication.id }}",
                    dataType: 'json',
                    data: {
                        exposeName: "{{ exposeName }}",
                        publicationData: advancedSetting.val()
                    },
                    success: function (data) {console.log(data.success);
                        if (data.success) {
                            publicationEdit.find("#pub-success").removeClass("hidden").html(data.message);
                            document.getElementById("publication-data-form").reset();
                            setTimeout(function(){
                                    $('#DIALOG-expose-edit').dialog('close');
                                }
                                , 2000
                            );
                        } else {
                            publicationEdit.find("#pub-error").removeClass("hidden").text(data.message);
                        }
                    }
                });
            } else {
                publicationEdit.find("#pub-error").removeClass("hidden").text("No changed!");
            }

        });

        publicationEdit.find('#permission-user').on('submit', function (e) {
            e.preventDefault();
            let mask = 0;

            if (userView.is(':checked')) {
                mask = mask | 1;
            }

            if (userEdit.is(':checked')) {
                mask = mask | 4;
            }

            if (userDelete.is(':checked')) {
                mask = mask | 8;
            }

            if (userList.val() !== '') {
                publicationEdit.find("#user-permission-error").addClass("hidden");
                publicationEdit.find("#user-permission-success").addClass("hidden");

                $.ajax({
                    type: "POST",
                    url: "/prod/expose/publication/permission/update",
                    dataType: 'json',
                    data: {
                        exposeName: "{{ exposeName }}",
                        jsonData: {
                            userType: "user",
                            userId: userList.val(),
                            objectType: "publication",
                            objectId: "{{ publication.id }}",
                            mask: mask
                        }
                    },
                    success: function (data) {
                        if (data.success) {
                            publicationEdit.find("#user-permission-error").addClass("hidden");
                            publicationEdit.find("#user-permission-success").removeClass("hidden").html(data.message);
                        } else {
                            publicationEdit.find("#user-permission-success").addClass("hidden");
                            publicationEdit.find("#user-permission-error").removeClass("hidden").html(data.message);
                        }
                    }
                });
            }

        });

        publicationEdit.find('#permission-group').on('submit', function (e) {
            e.preventDefault();
            let mask = 0;

            if (groupView.is(':checked')) {
                mask = mask | 1;
            }

            if (groupEdit.is(':checked')) {
                mask = mask | 4;
            }

            if (groupDelete.is(':checked')) {
                mask = mask | 8;
            }

            if (groupList.val() !== '') {
                publicationEdit.find("#group-permission-error").addClass("hidden");
                publicationEdit.find("#group-permission-success").addClass("hidden");

                $.ajax({
                    type: "POST",
                    url: "/prod/expose/publication/permission/update",
                    dataType: 'json',
                    data: {
                        exposeName: "{{ exposeName }}",
                        jsonData: {
                            userType: "group",
                            userId: groupList.val(),
                            objectType: "publication",
                            objectId: "{{ publication.id }}",
                            mask: mask
                        }
                    },
                    success: function (data) {
                        if (data.success) {
                            publicationEdit.find("#group-permission-error").addClass("hidden");
                            publicationEdit.find("#group-permission-success").removeClass("hidden").html(data.message);
                        } else {
                            publicationEdit.find("#group-permission-success").addClass("hidden");
                            publicationEdit.find("#group-permission-error").removeClass("hidden").html(data.message);
                        }
                    }
                });
            }

        });

    </script>
    <style>
        .visibility-hidden {
            visibility: hidden;
        }
        .publication-block .ui-widget.hide {
            display: none;
        }
    </style>

